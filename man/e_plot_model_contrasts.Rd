% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/e_plot_model_contrasts.R
\name{e_plot_model_contrasts}
\alias{e_plot_model_contrasts}
\title{Compute and plot all contrasts and test results from a linear model by automating the use of emmeans tables and plots.}
\usage{
e_plot_model_contrasts(
  fit = NULL,
  dat_cont = NULL,
  choose_contrasts = NULL,
  sw_table_in_plot = TRUE,
  adjust_method = c("none", "tukey", "scheffe", "sidak", "bonferroni", "dunnettx",
    "mvt")[4],
  CI_level = 0.95,
  sw_print = TRUE,
  sw_marginal_even_if_interaction = FALSE,
  sw_TWI_plots_keep = c("singles", "both", "all")[3],
  sw_TWI_both_orientation = c("wide", "tall")[1],
  sw_plot_quantiles_values = c("quantiles", "values")[1],
  plot_quantiles = c(0.05, 0.25, 0.5, 0.75, 0.95),
  plot_values = NULL
)
}
\arguments{
\item{fit}{lm object}

\item{dat_cont}{data used for the lm object (only used for variable labels using labelled::var_label()}

\item{choose_contrasts}{is a list of effects to plot, such as c("hp", "vs:wt"); NULL does all in model.}

\item{sw_table_in_plot}{T/F put table of results in caption of plot}

\item{adjust_method}{see         `?emmeans::summary.emmGrid`}

\item{CI_level}{level from `?emmeans::emmeans`}

\item{sw_print}{T/F whether to print results as this function runs}

\item{sw_marginal_even_if_interaction}{T/F whether to also calculate marginal results when involved in interaction(s)}

\item{sw_TWI_plots_keep}{two-way interaction plots are plotted for each variable conditional on the other.  Plots are created separately ("singles") or together in a grid ("both"), and "all" keeps the singles and the grid version.}

\item{sw_TWI_both_orientation}{"tall" or "wide" orientation for when both two-way interaction plots are combined in a grid}

\item{sw_plot_quantiles_values}{"quantiles" or "values" to specify whether to plot quantiles of the numeric variable or specified values}

\item{plot_quantiles}{quantiles plotted for numeric:numeric interaction plots, if \code{sw_plot_quantiles_values} is "quantiles"}

\item{plot_values}{a named list for values plotted for a single specified numeric:numeric interaction plot, if \code{sw_plot_quantiles_values} is "values".  Specify a specific contrast, for example: \code{choose_contrasts = "disp:hp"}.  Then specify the values for each variable, for example: \code{plot_values = list(hp = c(75, 100, 150, 200, 250), disp = c(80, 120, 200, 350, 450))}}
}
\value{
out                      a list of two lists: "tables" and "plots", each have results for each contrast that was computed.  "tables" is a list of emmeans tables to print.  "plots" is a list of ggplot objects to plot separately or arrange in a grid.
}
\description{
Variable labels can be provided by labelling your data with the labelled::var_label() command.
}
\details{
Plot interpretation:
This EMM plot (Estimated Marginal Means, aka Least-Squares Means) is only
available when conditioning on one variable. The blue bars are confidence
intervals for the EMMs; don't ever use confidence intervals for EMMs to perform
comparisons --- they can be very misleading. The red arrows are for the
comparisons between means; the degree to which the "comparison arrows" overlap
reflects as much as possible the significance of the comparison of the two
estimates. If an arrow from one mean overlaps an arrow from another group, the
difference is not significant, based on the adjust setting (which defaults to
"tukey").
}
\examples{
# Data for testing
dat_cont <-
  datasets::mtcars \%>\%
  tibble::as_tibble(
    rownames = "model"
  ) \%>\%
  dplyr::mutate(
    cyl = cyl \%>\% factor(levels = c(4, 6, 8), labels = c("four", "six", "eight"))
  , vs  = vs  \%>\% factor(levels = c(0, 1), labels = c("V-shaped", "straight"))
  , am  = am  \%>\% factor(levels = c(0, 1), labels = c("automatic", "manual"))
  )

# Label columns
dat_labels <-
  tibble::tribble(
    ~var    , ~label
  , "model" , "Model"
  , "mpg"   , "Miles/(US) gallon"
  , "cyl"   , "Number of cylinders"
  , "disp"  , "Displacement (cu.in.)"
  , "hp"    , "Gross horsepower"
  , "drat"  , "Rear axle ratio"
  , "wt"    , "Weight (1000 lbs)"
  , "qsec"  , "1/4 mile time"
  , "vs"    , "Engine"                     # (0 = V-shaped, 1 = straight)"
  , "am"    , "Transmission"               # (0 = automatic, 1 = manual)"
  , "gear"  , "Number of forward gears"
  , "carb"  , "Number of carburetors"
  )

for (i_row in 1:nrow(dat_labels)) {
  labelled::var_label(dat_cont[[dat_labels[["var"]][i_row] ]]) <- dat_labels[["label"]][i_row]
}

 # Set specific model with some interactions
form_model <-
  mpg ~ cyl + disp + hp + wt + vs + am + cyl:vs + disp:hp + hp:vs

fit <-
  lm(
    formula = form_model
  , data    = dat_cont
  )

stats::anova(fit)
summary(fit)

fit_contrasts <-
  e_plot_model_contrasts(
    fit                = fit
  , dat_cont           = dat_cont
  , sw_print           = FALSE
  , sw_table_in_plot   = FALSE
  , sw_TWI_plots_keep  = "both"
  )
fit_contrasts$tables  # to print tables
fit_contrasts$plots   # to print plots
fit_contrasts$text    # to print caption text



# one specific numeric:numeric contrast with specified values
e_plot_model_contrasts(
  fit                     = fit
, dat_cont                = dat_cont
, choose_contrasts        = "disp:hp"
, sw_table_in_plot        = TRUE
, adjust_method           = c("none", "tukey", "scheffe", "sidak", "bonferroni", "dunnettx", "mvt")[4]  # see ?emmeans::summary.emmGrid
, CI_level                = 0.95
, sw_print                = TRUE
, sw_marginal_even_if_interaction = TRUE
, sw_TWI_plots_keep       = c("singles", "both", "all")[3]
, sw_TWI_both_orientation = c("tall", "wide")[2]
, sw_plot_quantiles_values = c("quantiles", "values")[2]    # for numeric:numeric plots
, plot_quantiles          = c(0.05, 0.25, 0.50, 0.75, 0.95) # for numeric:numeric plots
, plot_values             = list(hp = c(75, 100, 150, 200, 250), disp = c(80, 120, 200, 350, 450)) # for numeric:numeric plots
)


}
